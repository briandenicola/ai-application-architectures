version: '3'

dotenv: ['.env']

env:
  TITLE: openai_learnings
  DEFAULT_REGION: "westus3"

tasks:
  default: 
    cmds: 
    - task --list 
  
  up: 
    desc: Builds Complete Environment
    cmds:
    - task: init
    - task: apply 
    - task: settings

  init:
    desc: Initializes Terraform workspace
    cmds:
    - terraform -chdir=./infrastructure workspace new {{.REGION}} || true
    - terraform -chdir=./infrastructure workspace select {{.REGION}}
    - terraform -chdir=./infrastructure init
    vars: 
      REGION: '{{default .DEFAULT_REGION .CLI_ARGS}}'

  apply:
    desc: Creates Azure infrastructure
    cmds:
    - terraform -chdir=./infrastructure apply -auto-approve
      -var "region={{.REGION}}" 
      -var "tags={{.TITLE}}"
      -compact-warnings
    vars: 
      REGION: '{{default .DEFAULT_REGION .CLI_ARGS}}'

  refresh:
    cmds:
    - terraform -chdir=./infrastructure refresh
      -var "region={{.REGION}}" 
      -var "tags={{.TITLE}}"
      -compact-warnings
    vars: 
      REGION: '{{default .DEFAULT_REGION .CLI_ARGS}}'

  settings:
    cmds:
    - task: refresh
    - jq -n --arg endpoint {{.ENDPOINT}} --arg apiKey {{.KEY}} --arg modelId {{.MODEL}} '{"OpenAI":$ARGS.named}' > src/settings.json
    vars:
      KEY: 
        sh: terraform -chdir=./infrastructure output -raw OPENAI_KEY
      ENDPOINT:
        sh: terraform -chdir=./infrastructure output -raw OPENAI_ENDPOINT
      MODEL:
        sh: terraform -chdir=./infrastructure output -raw OPENAI_MODEL_ID

  jokester:
    desc: Builds and run the application 
    dir: ./src/jokester
    cmds:
    - dotnet run

  down:
    desc: Destroys all Azure resources and cleans up Terraform
    cmds:
    - az group list --tag Application="{{.TITLE}}" --query "[].name" -o tsv | xargs -ot -n 1 az group delete -y --no-wait -n || true
    - cd infrastructure ;
      rm -rf terraform.tfstate.d .terraform.lock.hcl .terraform terraform.tfstate terraform.tfstate.backup .terraform.tfstate.lock.info || true
